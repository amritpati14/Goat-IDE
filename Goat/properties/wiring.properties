# Define user Goat settings for Wiring/Arduino (.ino,*.pde), 
#
# Please note that, as usual: 
# these variables can be overwritten by populating the file
#
# $HOME/.GoatUser.properties (on Linux) 
#
# %HOME%/GoatUser.properties (on Windows) 

#
#### following are some specifig Arduino settings.
#
arduino.board_tag=uno
       
if PLAT_GTK
       arduino.dir=/opt/arduino-1.0
       arduino.avr_tools_path=/usr/bin/
       arduino.port=/dev/ttyACM0
       
if PLAT_WIN
       arduino.dir=C:\arduino 1.0
       arduino.port=COM6

#
#### Define general Goat settings for Wiring/Arduino  files.
#

file.patterns.wiring=*.ino;*.pde;*.h

filter.wiring=Arduino (ino pde)|$(file.patterns.wiring)|

lexer.$(file.patterns.wiring)=cpp

api.$(file.patterns.wiring)=$(GoatDefaultHome)/wiring/arduino.api
calltip.cpp.end.definition=)
calltip.cpp.word.characters=.:$(chars.alpha)$(chars.numeric)_
calltip.cpp.parameters.start=(
calltip.cpp.parameters.end=)
calltip.cpp.parameters.separators=,
autocomplete.cpp.start.characters=.

comment.block.cpp=//~
#comment.block.at.line.start.cpp=1
comment.stream.start.cpp=/*
comment.stream.end.cpp=*/
comment.box.start.cpp=/*
comment.box.middle.cpp= *
comment.box.end.cpp= */

keywordclass.wiring=and and_eq asm auto bitand bitor bool break \
case catch char class compl const const_cast continue \
default delete do double dynamic_cast else enum explicit export extern false float for \
friend goto if inline int long mutable namespace new not not_eq \
operator or or_eq private protected public \
register reinterpret_cast return short signed sizeof static static_cast struct switch \
template this throw true try typedef typeid typename union unsigned using \
virtual void volatile wchar_t while xor xor_eq

keywords.$(file.patterns.wiring)=$(keywordclass.wiring)

word.chars.wiring=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.wiring)=$(word.chars.wiring)

#styling.within.preprocessor=1
preprocessor.symbol.$(file.patterns.wiring)=#
preprocessor.start.$(file.patterns.wiring)=if ifdef ifndef
preprocessor.middle.$(file.patterns.wiring)=else elif
preprocessor.end.$(file.patterns.wiring)=endif

if PLAT_WIN
	command.help.$(file.patterns.wiring)="http://www.google.com/search?q=+$(CurrentWord)&sitesearch=arduino.cc"
	command.help.subsystem.*.wiring=2

if PLAT_GTK
	command.help.$(file.patterns.wiring)=x-www-browser "http://www.google.com/search?q=+$(CurrentWord)&sitesearch=arduino.cc"
	command.help.subsystem.*.wiring=2

# Default
style.cpp.32=$(font.base)
# White space
style.cpp.0=fore:#808080
# Comment: /* */.
style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment: //.
style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment: block comments beginning with /** or /*!
style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc)
# Number
style.cpp.4=$(colour.number)
# Keyword
style.cpp.5=$(colour.keyword),bold
# Double quoted string
style.cpp.6=$(colour.string)
# Single quoted string
style.cpp.7=$(colour.char)
# UUIDs (only in IDL)
style.cpp.8=fore:#804080
# Preprocessor
style.cpp.9=$(colour.preproc)
# Operators
style.cpp.10=$(colour.operator),bold
# Identifiers
style.cpp.11=
# End of line where string is not closed
style.cpp.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Verbatim strings for C#
style.cpp.13=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled
# Regular expressions for JavaScript
style.cpp.14=fore:#3F7F3F,$(font.monospace),back:#E0F0FF,eolfilled
# Doc Comment Line: line comments beginning with /// or //!.
style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)
# Keywords2
style.cpp.16=fore:#B00040
# Comment keyword
style.cpp.17=fore:#3060A0,$(font.code.comment.doc)
# Comment keyword error
style.cpp.18=fore:#804020,$(font.code.comment.doc)
# Raw strings for C++0x
style.cpp.20=$(colour.string),back:#FFF3FF,eolfilled
# Triple-quoted strings for Vala
style.cpp.21=$(font.monospace),fore:#007F00,back:#E0FFE0,eolfilled
# Hash-quoted strings for Pike
style.cpp.22=$(font.monospace),fore:#007F00,back:#E7FFD7,eolfilled

# Inactive states are 64 greater than their active counterparts

# White space
style.cpp.64=fore:#C0C0C0
# Comment: /* */.
style.cpp.65=$(style.cpp.1),fore:#90B090
# Line Comment: //.
style.cpp.66=$(style.cpp.2),fore:#90B090
# Doc comment: block comments beginning with /** or /*!
style.cpp.67=$(style.cpp.3),fore:#D0D0D0
# Number
style.cpp.68=$(style.cpp.4),fore:#90B0B0
# Keyword
style.cpp.69=$(style.cpp.5),fore:#9090B0
# Double quoted string
style.cpp.70=$(style.cpp.6),fore:#B090B0
# Single quoted string
style.cpp.71=$(style.cpp.7),fore:#B090B0
# UUIDs (only in IDL)
style.cpp.72=$(style.cpp.8),fore:#C0C0C0
# Preprocessor
style.cpp.73=$(style.cpp.9),fore:#B0B090
# Operators
style.cpp.74=$(style.cpp.10),fore:#B0B0B0
# Identifiers
style.cpp.75=$(style.cpp.11),fore:#B0B0B0
# End of line where string is not closed
style.cpp.76=$(style.cpp.12),fore:#000000
# Verbatim strings for C#
style.cpp.77=$(style.cpp.13),fore:#90B090
# Regular expressions for JavaScript
style.cpp.78=$(style.cpp.14),fore:#7FAF7F
# Doc Comment Line: line comments beginning with /// or //!.
style.cpp.79=$(style.cpp.15),fore:#C0C0C0
# Keywords2
style.cpp.80=$(style.cpp.16),fore:#C0C0C0
# Comment keyword
style.cpp.81=$(style.cpp.17),fore:#C0C0C0
# Comment keyword error
style.cpp.82=$(style.cpp.18),fore:#C0C0C0
# Raw strings for C++0x
style.cpp.84=$(style.cpp.20),fore:#B090B0
# Triple-quoted strings for Vala
style.cpp.85=$(style.cpp.21),fore:#90B090
# Hash-quoted strings for Pike
style.cpp.86=$(style.cpp.22),fore:#90B090

# Braces are only matched in operator style
braces.cpp.style=10

if PLAT_GTK
	command.help.$(file.patterns.wiring)=x-www-browser "file://$(arduino.dir)/reference/index.html"
	command.help.subsystem.$(file.patterns.wiring)=2
	command.build.$(file.patterns.wiring)=make all
	command.go.$(file.patterns.wiring)=make raw_upload
	command.clean.$(file.patterns.wiring)=make clean

if PLAT_WIN
	make.wiring.cmd=$(arduino.dir)\hardware\tools\avr\utils\bin\make
	command.help.$(file.patterns.wiring)="file://$(arduino.dir)/reference/index.html"
	command.help.subsystem.$(file.patterns.wiring)=2
	command.build.$(file.patterns.wiring)=$(FileDir)\do.bat -v -c -u $(FileNameExt)
	command.go.$(file.patterns.wiring)=$(FileDir)\do.bat -v -u $(FileNameExt)
	command.clean.$(file.patterns.wiring)=del /F/S/Q $(FileDir)\obj
	
command.configure.$(file.patterns.wiring)=dofile $(GoatDefaultHome)/wiring/do_makefile.lua
command.configure.subsystem.$(file.patterns.wiring)=3




